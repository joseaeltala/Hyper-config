{
  "manifest": {
    "name": "sorted-union-stream",
    "version": "2.1.3",
    "repository": {
      "type": "git",
      "url": "git://github.com/mafintosh/sorted-union-stream.git"
    },
    "license": "MIT",
    "description": "Get the union of two sorted streams",
    "keywords": [
      "union",
      "sorted",
      "stream"
    ],
    "author": {
      "name": "Mathias Buus Madsen",
      "email": "mathiasbuus@gmail.com"
    },
    "scripts": {
      "test": "tape test.js"
    },
    "dependencies": {
      "from2": "^1.3.0",
      "stream-iterate": "^1.1.0"
    },
    "devDependencies": {
      "standard": "^3.3.0",
      "tape": "^3.0.0"
    },
    "bugs": {
      "url": "https://github.com/mafintosh/sorted-union-stream/issues"
    },
    "homepage": "https://github.com/mafintosh/sorted-union-stream",
    "main": "index.js",
    "_registry": "npm",
    "_loc": "/home/jael/.hyper_plugins/cache/v6/npm-sorted-union-stream-2.1.3-c7794c7e077880052ff71a8d4a2dbb4a9a638ac7-integrity/node_modules/sorted-union-stream/package.json",
    "readmeFilename": "README.md",
    "readme": "# sorted-union-stream\n\nGet the union of two sorted streams\n\n```\nnpm install sorted-union-stream\n```\n\n[![build status](https://secure.travis-ci.org/mafintosh/sorted-union-stream.png)](http://travis-ci.org/mafintosh/sorted-union-stream)\n\n## Usage\n\n``` js\nvar union = require('sorted-union-stream')\nvar from = require('from2-array')\n\n// es.readArray converts an array into a stream\nvar sorted1 = from.obj([1,10,24,42,43,50,55])\nvar sorted2 = from.obj([10,42,53,55,60])\n\n// combine the two streams into a single sorted stream\nvar u = union(sorted1, sorted2)\n\nu.on('data', function(data) {\n  console.log(data)\n})\nu.on('end', function() {\n  console.log('no more data')\n})\n```\n\nRunning the above example will print\n\n```\n1\n10\n24\n42\n43\n50\n53\n55\n60\nno more data\n```\n\n## Streaming objects\n\nIf you are streaming objects sorting is based on `.key`.\n\nIf this property is not present you should add a `toKey` function as the third parameter.\n`toKey` should return an key representation of the data that can be used to compare objects.\n\n_The keys MUST be sorted_\n\n``` js\nvar sorted1 = from.obj([{foo:'a'}, {foo:'b'}, {foo:'c'}])\nvar sorted2 = from.obj([{foo:'b'}, {foo:'d'}])\n\nvar u = union(sorted1, sorted2, function(data) {\n  return data.foo // the foo property is sorted\n})\n\nunion.on('data', function(data) {\n  console.log(data)\n});\n```\n\nRunning the above will print\n\n```\n{foo:'a'}\n{foo:'b'}\n{foo:'c'}\n{foo:'d'}\n```\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Mathias Buus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sorted-union-stream/-/sorted-union-stream-2.1.3.tgz#c7794c7e077880052ff71a8d4a2dbb4a9a638ac7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sorted-union-stream/-/sorted-union-stream-2.1.3.tgz",
    "hash": "c7794c7e077880052ff71a8d4a2dbb4a9a638ac7",
    "integrity": "sha512-RaKskQJZkmVREIwyAFho1RRU+sKjDdg51Crvxg2VxmIyiIrNhPNoJD/by5/pklWBXAZoO6LfAAGv8xd47p9TnQ==",
    "registry": "npm",
    "packageName": "sorted-union-stream",
    "cacheIntegrity": "sha512-RaKskQJZkmVREIwyAFho1RRU+sKjDdg51Crvxg2VxmIyiIrNhPNoJD/by5/pklWBXAZoO6LfAAGv8xd47p9TnQ== sha1-x3lMfgd4gAUv9xqNSi27Sppjisc="
  },
  "registry": "npm",
  "hash": "c7794c7e077880052ff71a8d4a2dbb4a9a638ac7"
}