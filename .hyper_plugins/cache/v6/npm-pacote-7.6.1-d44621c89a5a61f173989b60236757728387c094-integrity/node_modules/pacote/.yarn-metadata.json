{
  "manifest": {
    "name": "pacote",
    "version": "7.6.1",
    "description": "JavaScript package downloader",
    "main": "index.js",
    "files": [
      "*.js",
      "lib"
    ],
    "scripts": {
      "prerelease": "npm t",
      "release": "standard-version -s",
      "postrelease": "npm publish && git push --follow-tags",
      "pretest": "standard",
      "test": "nyc --all -- tap -J test/*.js",
      "test-docker": "docker run -it --rm --name pacotest -v \"$PWD\":/tmp -w /tmp node:latest npm test",
      "update-coc": "weallbehave -o . && git add CODE_OF_CONDUCT.md && git commit -m 'docs(coc): updated CODE_OF_CONDUCT.md'",
      "update-contrib": "weallcontribute -o . && git add CONTRIBUTING.md && git commit -m 'docs(contributing): updated CONTRIBUTING.md'"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/zkat/pacote"
    },
    "keywords": [
      "packages",
      "npm",
      "git"
    ],
    "author": {
      "name": "Kat Marchán",
      "email": "kzm@sykosomatic.org"
    },
    "contributors": [
      {
        "name": "Charlotte Spencer",
        "email": "charlottelaspencer@gmail.com"
      },
      {
        "name": "Rebecca Turner",
        "email": "me@re-becca.org"
      }
    ],
    "license": "MIT",
    "dependencies": {
      "bluebird": "^3.5.1",
      "cacache": "^10.0.4",
      "get-stream": "^3.0.0",
      "glob": "^7.1.2",
      "lru-cache": "^4.1.1",
      "make-fetch-happen": "^2.6.0",
      "minimatch": "^3.0.4",
      "mississippi": "^3.0.0",
      "mkdirp": "^0.5.1",
      "normalize-package-data": "^2.4.0",
      "npm-package-arg": "^6.0.0",
      "npm-packlist": "^1.1.10",
      "npm-pick-manifest": "^2.1.0",
      "osenv": "^0.1.5",
      "promise-inflight": "^1.0.1",
      "promise-retry": "^1.1.1",
      "protoduck": "^5.0.0",
      "rimraf": "^2.6.2",
      "safe-buffer": "^5.1.1",
      "semver": "^5.5.0",
      "ssri": "^5.2.4",
      "tar": "^4.4.0",
      "unique-filename": "^1.1.0",
      "which": "^1.3.0"
    },
    "devDependencies": {
      "nock": "^9.2.3",
      "npmlog": "^4.1.2",
      "nyc": "^11.4.1",
      "require-inject": "^1.4.2",
      "standard": "^11.0.0",
      "standard-version": "^4.3.0",
      "tacks": "^1.2.6",
      "tap": "^11.1.2",
      "tar-stream": "^1.5.5",
      "weallbehave": "^1.2.0",
      "weallcontribute": "^1.0.7"
    },
    "_registry": "npm",
    "_loc": "/home/jael/.hyper_plugins/cache/v6/npm-pacote-7.6.1-d44621c89a5a61f173989b60236757728387c094-integrity/node_modules/pacote/package.json",
    "readmeFilename": "README.md",
    "readme": "# pacote [![npm version](https://img.shields.io/npm/v/pacote.svg)](https://npm.im/pacote) [![license](https://img.shields.io/npm/l/pacote.svg)](https://npm.im/pacote) [![Travis](https://img.shields.io/travis/zkat/pacote.svg)](https://travis-ci.org/zkat/pacote) [![AppVeyor](https://ci.appveyor.com/api/projects/status/github/zkat/pacote?svg=true)](https://ci.appveyor.com/project/zkat/pacote) [![Coverage Status](https://coveralls.io/repos/github/zkat/pacote/badge.svg?branch=latest)](https://coveralls.io/github/zkat/pacote?branch=latest)\n\n[`pacote`](https://github.com/zkat/pacote) is a Node.js library for downloading\n[npm](https://npmjs.org)-compatible packages. It supports all package specifier\nsyntax that `npm install` and its ilk support. It transparently caches anything\nneeded to reduce excess operations, using [`cacache`](https://npm.im/cacache).\n\n## Install\n\n`$ npm install --save pacote`\n\n## Table of Contents\n\n* [Example](#example)\n* [Features](#features)\n* [Contributing](#contributing)\n* [API](#api)\n  * [`manifest`](#manifest)\n  * [`extract`](#extract)\n  * [`tarball`](#tarball)\n  * [`tarball.stream`](#tarball-stream)\n  * [`tarball.toFile`](#tarball-to-file)\n  * [`prefetch`](#prefetch)\n  * [`options`](#options)\n  * [`clearMemoized`](#clearMemoized)\n\n### Example\n\n```javascript\nconst pacote = require('pacote')\n\npacote.manifest('pacote@^1').then(pkg => {\n  console.log('package manifest for registry pkg:', pkg)\n  // { \"name\": \"pacote\", \"version\": \"1.0.0\", ... }\n})\n\npacote.extract('http://hi.com/pkg.tgz', './here').then(() => {\n  console.log('remote tarball contents extracted to ./here')\n})\n```\n\n### Features\n\n* Handles all package types [npm](https://npm.im/npm) does\n* [high-performance, reliable, verified local cache](https://npm.im/cacache)\n* offline mode\n* authentication support (private git, private npm registries, etc)\n* github, gitlab, and bitbucket-aware\n* semver range support for git dependencies\n\n### Contributing\n\nThe pacote team enthusiastically welcomes contributions and project participation! There's a bunch of things you can do if you want to contribute! The [Contributor Guide](CONTRIBUTING.md) has all the information you need for everything from reporting bugs to contributing entire new features. Please don't hesitate to jump in if you'd like to, or even ask us questions if something isn't clear.\n\n### API\n\n#### <a name=\"manifest\"></a> `> pacote.manifest(spec, [opts])`\n\nFetches the *manifest* for a package. Manifest objects are similar and based\non the `package.json` for that package, but with pre-processed and limited\nfields. The object has the following shape:\n\n```javascript\n{\n  \"name\": PkgName,\n  \"version\": SemverString,\n  \"dependencies\": { PkgName: SemverString },\n  \"optionalDependencies\": { PkgName: SemverString },\n  \"devDependencies\": { PkgName: SemverString },\n  \"peerDependencies\": { PkgName: SemverString },\n  \"bundleDependencies\": false || [PkgName],\n  \"bin\": { BinName: Path },\n  \"_resolved\": TarballSource, // different for each package type\n  \"_integrity\": SubresourceIntegrityHash,\n  \"_shrinkwrap\": null || ShrinkwrapJsonObj\n}\n```\n\nNote that depending on the spec type, some additional fields might be present.\nFor example, packages from `registry.npmjs.org` have additional metadata\nappended by the registry.\n\n##### Example\n\n```javascript\npacote.manifest('pacote@1.0.0').then(pkgJson => {\n  // fetched `package.json` data from the registry\n})\n```\n\n#### <a name=\"extract\"></a> `> pacote.extract(spec, destination, [opts])`\n\nExtracts package data identified by `<spec>` into a directory named\n`<destination>`, which will be created if it does not already exist.\n\nIf `opts.digest` is provided and the data it identifies is present in the cache,\n`extract` will bypass most of its operations and go straight to extracting the\ntarball.\n\n##### Example\n\n```javascript\npacote.extract('pacote@1.0.0', './woot', {\n  digest: 'deadbeef'\n}).then(() => {\n  // Succeeds as long as `pacote@1.0.0` still exists somewhere. Network and\n  // other operations are bypassed entirely if `digest` is present in the cache.\n})\n```\n\n#### <a name=\"tarball\"></a> `> pacote.tarball(spec, [opts])`\n\nFetches package data identified by `<spec>` and returns the data as a buffer.\n\nThis API has two variants:\n\n* `pacote.tarball.stream(spec, [opts])` - Same as `pacote.tarball`, except it returns a stream instead of a Promise.\n* `pacote.tarball.toFile(spec, dest, [opts])` - Instead of returning data directly, data will be written directly to `dest`, and create any required directories along the way.\n\n##### Example\n\n```javascript\npacote.tarball('pacote@1.0.0', { cache: './my-cache' }).then(data => {\n  // data is the tarball data for pacote@1.0.0\n})\n```\n\n#### <a name=\"tarball-stream\"></a> `> pacote.tarball.stream(spec, [opts])`\n\nSame as `pacote.tarball`, except it returns a stream instead of a Promise.\n\n##### Example\n\n```javascript\npacote.tarball.stream('pacote@1.0.0')\n.pipe(fs.createWriteStream('./pacote-1.0.0.tgz'))\n```\n\n#### <a name=\"tarball-to-file\"></a> `> pacote.tarball.toFile(spec, dest, [opts])`\n\nLike `pacote.tarball`, but instead of returning data directly, data will be\nwritten directly to `dest`, and create any required directories along the way.\n\n##### Example\n\n```javascript\npacote.tarball.toFile('pacote@1.0.0', './pacote-1.0.0.tgz')\n.then(() => /* pacote tarball written directly to ./pacote-1.0.0.tgz */)\n```\n\n#### <a name=\"prefetch\"></a> `> pacote.prefetch(spec, [opts])`\n\n##### THIS API IS DEPRECATED. USE `pacote.tarball()` INSTEAD\n\nFetches package data identified by `<spec>`, usually for the purpose of warming\nup the local package cache (with `opts.cache`). It does not return anything.\n\n##### Example\n\n```javascript\npacote.prefetch('pacote@1.0.0', { cache: './my-cache' }).then(() => {\n  // ./my-cache now has both the manifest and tarball for `pacote@1.0.0`.\n})\n```\n\n#### <a name=\"clearMemoized\"></a> `> pacote.clearMemoized()`\n\nThis utility function can be used to force pacote to release its references\nto any memoized data in its various internal caches. It might help free\nsome memory.\n\n```javascript\npacote.manifest(...).then(() => pacote.clearMemoized)\n\n```\n\n#### <a name=\"options\"></a> `> options`\n\n##### `opts.integrity`\n\nIf provided, pacote will confirm that the relevant integrity hash for each\noperation's results matches the given digest. The call will return `EINTEGRITY`\nif the check fails.\n\nAdditionally, `pacote.extract` will use this integrity string check the cache\ndirectly for matching contents before performing any other operations.\n\n##### `opts.cache`\n##### `opts.cacheUid`/`opts.cacheGid`\n##### `opts.uid`/`opts.gid`\n##### `opts.scope`\n##### `opts.registry`\n##### `opts.@somescope:registry`\n##### `opts.auth`\n##### `opts.log`\n##### `opts.maxSockets`\n\nDefault: `silentNpmLog`\n\nAn [`npmlog`](https://npm.im/npmlog)-compatible logger. Will be used to log\nvarious events at the levels specified by `npmlog`.\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2017 Kat Marchán\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pacote/-/pacote-7.6.1.tgz#d44621c89a5a61f173989b60236757728387c094",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pacote/-/pacote-7.6.1.tgz",
    "hash": "d44621c89a5a61f173989b60236757728387c094",
    "integrity": "sha512-2kRIsHxjuYC1KRUIK80AFIXKWy0IgtFj76nKcaunozKAOSlfT+DFh3EfeaaKvNHCWixgi0G0rLg11lJeyEnp/Q==",
    "registry": "npm",
    "packageName": "pacote",
    "cacheIntegrity": "sha512-2kRIsHxjuYC1KRUIK80AFIXKWy0IgtFj76nKcaunozKAOSlfT+DFh3EfeaaKvNHCWixgi0G0rLg11lJeyEnp/Q== sha1-1EYhyJpaYfFzmJtgI2dXcoOHwJQ="
  },
  "registry": "npm",
  "hash": "d44621c89a5a61f173989b60236757728387c094"
}