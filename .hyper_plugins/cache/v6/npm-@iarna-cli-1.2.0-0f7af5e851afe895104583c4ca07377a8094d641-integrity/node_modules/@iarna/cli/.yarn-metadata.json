{
  "manifest": {
    "name": "@iarna/cli",
    "version": "1.2.0",
    "description": "Some simple CLI scaffolding for promise returning applications.",
    "main": "app.js",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "keywords": [],
    "author": {
      "name": "Rebecca Turner",
      "email": "me@re-becca.org",
      "url": "http://re-becca.org/"
    },
    "license": "ISC",
    "dependencies": {
      "signal-exit": "^3.0.2",
      "update-notifier": "^2.2.0",
      "yargs": "^8.0.2"
    },
    "files": [
      "app.js"
    ],
    "devDependencies": {},
    "repository": {
      "type": "git",
      "url": "git+https://github.com/iarna/cli.git"
    },
    "bugs": {
      "url": "https://github.com/iarna/cli/issues"
    },
    "homepage": "https://github.com/iarna/cli#readme",
    "_registry": "npm",
    "_loc": "/home/jael/.hyper_plugins/cache/v6/npm-@iarna-cli-1.2.0-0f7af5e851afe895104583c4ca07377a8094d641-integrity/node_modules/@iarna/cli/package.json",
    "readmeFilename": "README.md",
    "readme": "# @iarna/cli\n\nSome simple CLI scaffolding for promise returning applications.\n\n## EXAMPLE\n\n`example.js`\n```js\nrequire('@iarna/cli')(main)\n  .boolean('silent')\n  .boolean('exit')\n  .boolean('error')\n  .boolean('reject')\n  .boolean('code50')\n  .version()\n  .help()\n\nfunction main (opts, arg1, arg2, arg3) {\n  if (!opts.silent) console.error('Starting up!')\n  console.log('Got:', arg1, arg2, arg3)\n  if (opts.exit) process.exit()\n  if (opts.error) throw new Error('throw')\n  if (opts.reject) return Promise.reject(new Error('reject'))\n  if (opts.code50) return Promise.reject(50)\n  return new Promise(resolve => setTimeout(resolve, 10000))\n}\n```\n\n```console\n$ node example hello there world\nStarting up!\nGot: hello there world\n$ node example hello there world\nStarting up!\nGot: hello there world\n^C\nAbnormal exit: SIGINT\n$ node example --silent hello there world\nGot: hello there world\n$ node example --silent hello there world --exit\nGot: hello there world\nAbnormal exit: Promises not resolved\n$ node example --silent hello there world --error\nGot: hello there world\nError: throw\n    at main (/Users/rebecca/code/cli/example.js:11:25)\n    at Immediate.setImmediate (/Users/rebecca/code/cli/app.js:38:32)\n    at runCallback (timers.js:800:20)\n    at tryOnImmediate (timers.js:762:5)\n    at processImmediate [as _immediateCallback] (timers.js:733:5)\n$ node example --silent hello there world --reject\nGot: hello there world\nError: reject\n    at main (/Users/rebecca/code/cli/example.js:12:42)\n    at Immediate.setImmediate [as _onImmediate] (/Users/rebecca/code/cli/app.js:38:32)\n    at runCallback (timers.js:800:20)\n    at tryOnImmediate (timers.js:762:5)\n    at processImmediate [as _immediateCallback] (timers.js:733:5)\n$ node example --silent hello there world --code50\nGot: hello there world\n$ echo $?\n50\n```\n\n## WHAT YOU GET\n\n* `yargs` - The wrapper around the main function returns a yargs object, so\n  you can configure it as usual.  The `argv` object is passed in as the\n  first argument of your entry point function.  The rest of your positional\n  arguments are passed in as the remaining function arguments.\n* _exit without resolving warnings_ - If your program finishes without\n  resolving its promises (like if it crashes hard or you process.exit, or you just don't resolve the promise ) then\n  we warn about that.\n* `update-notifier` - A default update notifier is setup for your app so\n  users will learn about new versions when you publish them. Your app needs to\n  have a name, version and bin entry in its `package.json`. (The bin entry\n  needs to have the script using `@iarna/cli` in it for the update notifier\n  to trigger.)\n* If your entry point function rejects then that's reported with a stack\n  trace (if the rejected value has `.stack`) else with the rejected value\n  and your process will exit with an error code.\n\n## WHAT ITS NOT\n\nA full framework for writing cli apps.  You'll likely outgrow the error\nhandling pretty fast if this is anything beyond a little one off.  This\nmostly exists to scratch my own itch.  I kept on writing this code and I\nwanted to stop.  =D\n\n## USAGE\n\n### require('@iarna/cli')(entryPointFunction) → yargs\n\nThe module itself exports a function that you need to call with the name of\nyour main function.  Your main function is like `main` in C, it's the entry\npoint for your program.  It needs to return a promise that resolves when\nyour program completes.\n\nYour entry point function can be named anything, but it needs to return a\npromise and it takes arguments like this:\n\n`main(opts, arg1, arg2, …, argn) → Promise`\n\nThe first `opts` argument is `yargs.argv` and the additional arguments are\nfrom `argv._`, so `arg1 === argv._[0]`, `arg2 === argv._[1]` and so on.\n",
    "licenseText": "Copyright (c) 2015, Rebecca Turner <me@re-becca.org>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@iarna/cli/-/cli-1.2.0.tgz#0f7af5e851afe895104583c4ca07377a8094d641",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@iarna/cli/-/cli-1.2.0.tgz",
    "hash": "0f7af5e851afe895104583c4ca07377a8094d641",
    "integrity": "sha512-ukITQAqVs2n9HGmn3car/Ir7d3ta650iXhrG7pjr3EWdFmJuuOVWgYsu7ftsSe5VifEFFhjxVuX9+8F7L8hwcA==",
    "registry": "npm",
    "packageName": "@iarna/cli",
    "cacheIntegrity": "sha512-ukITQAqVs2n9HGmn3car/Ir7d3ta650iXhrG7pjr3EWdFmJuuOVWgYsu7ftsSe5VifEFFhjxVuX9+8F7L8hwcA== sha1-D3r16FGv6JUQRYPEygc3eoCU1kE="
  },
  "registry": "npm",
  "hash": "0f7af5e851afe895104583c4ca07377a8094d641"
}